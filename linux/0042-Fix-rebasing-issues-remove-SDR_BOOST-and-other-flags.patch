From 2e20bb1b65bd80924cab448c13d858acf301ee65 Mon Sep 17 00:00:00 2001
From: Bouke Haarsma <boukehaarsma23@gmail.com>
Date: Sat, 24 Jun 2023 12:49:52 +0200
Subject: [PATCH 42/42] Fix rebasing issues, remove SDR_BOOST and other flags
 that were behind the HDR flags. Also shuffle a function around which I
 resolved wrongly. Will fix when kernel actually works

Signed-off-by: Bouke Haarsma <boukehaarsma23@gmail.com>
---
 .../amd/display/amdgpu_dm/amdgpu_dm_plane.c   | 130 ++++--------------
 1 file changed, 23 insertions(+), 107 deletions(-)

diff --git a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_plane.c b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_plane.c
index 9ef8bf03385e..f209011a14e4 100644
--- a/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_plane.c
+++ b/drivers/gpu/drm/amd/display/amdgpu_dm/amdgpu_dm_plane.c
@@ -744,17 +744,6 @@ static int get_plane_formats(const struct drm_plane *plane,
 #ifdef CONFIG_DRM_AMD_COLOR_STEAMDECK
 static int attach_color_mgmt_properties(struct amdgpu_display_manager *dm, struct drm_plane *plane)
 {
-	drm_object_attach_property(&plane->base,
-				   dm->degamma_lut_property,
-				   0);
-	drm_object_attach_property(&plane->base,
-				   dm->degamma_lut_size_property,
-				   MAX_COLOR_LUT_ENTRIES);
-	drm_object_attach_property(&plane->base, dm->ctm_property,
-				   0);
-	drm_object_attach_property(&plane->base, dm->sdr_boost_property,
-				   DEFAULT_SDR_BOOST);
-
 	if (dm->dc->caps.color.dpp.dgam_ram || dm->dc->caps.color.dpp.gamma_corr ) {
 		drm_object_attach_property(&plane->base,
 					   dm->adev->mode_info.plane_degamma_lut_property, 0);
@@ -765,6 +754,26 @@ static int attach_color_mgmt_properties(struct amdgpu_display_manager *dm, struc
 					   dm->adev->mode_info.plane_degamma_tf_property,
 					   DRM_TRANSFER_FUNCTION_DEFAULT);
 	}
+	/* HDR MULT is always available */
+	drm_object_attach_property(&plane->base,
+				   dm->adev->mode_info.plane_hdr_mult_property,
+				   AMDGPU_HDR_MULT_DEFAULT);
+
+	if (dm->dc->caps.color.dpp.hw_3d_lut) {
+		drm_object_attach_property(&plane->base,
+					   dm->adev->mode_info.plane_shaper_lut_property, 0);
+		drm_object_attach_property(&plane->base,
+					   dm->adev->mode_info.plane_shaper_lut_size_property,
+					   MAX_COLOR_LUT_ENTRIES);
+		drm_object_attach_property(&plane->base,
+					   dm->adev->mode_info.plane_shaper_tf_property,
+					   DRM_TRANSFER_FUNCTION_DEFAULT);
+		drm_object_attach_property(&plane->base,
+					   dm->adev->mode_info.plane_lut3d_property, 0);
+		drm_object_attach_property(&plane->base,
+					   dm->adev->mode_info.plane_lut3d_size_property,
+					   MAX_COLOR_3DLUT_ENTRIES);
+	}
 
 	return 0;
 }
@@ -1348,10 +1357,7 @@ static void dm_drm_plane_reset(struct drm_plane *plane)
 
 	if (amdgpu_state)
 		__drm_atomic_helper_plane_reset(plane, &amdgpu_state->base);
-#ifdef CONFIG_DRM_AMD_COLOR_STEAMDECK
-	if (amdgpu_state)
-		amdgpu_state->sdr_boost = DEFAULT_SDR_BOOST;
-#endif
+
 	if (!amdgpu_state)
 		return;
 
@@ -1382,10 +1388,6 @@ dm_drm_plane_duplicate_state(struct drm_plane *plane)
 #ifdef CONFIG_DRM_AMD_COLOR_STEAMDECK
 	if (dm_plane_state->degamma_lut)
 		drm_property_blob_get(dm_plane_state->degamma_lut);
-	if (dm_plane_state->ctm)
-		drm_property_blob_get(dm_plane_state->ctm);
-
-	dm_plane_state->sdr_boost = old_dm_plane_state->sdr_boost;
 #endif
 	if (dm_plane_state->shaper_lut)
 		drm_property_blob_get(dm_plane_state->shaper_lut);
@@ -1468,7 +1470,6 @@ static void dm_drm_plane_destroy_state(struct drm_plane *plane,
 
 #ifdef CONFIG_DRM_AMD_COLOR_STEAMDECK
 	drm_property_blob_put(dm_plane_state->degamma_lut);
-	drm_property_blob_put(dm_plane_state->ctm);
 #endif
 	if (dm_plane_state->lut3d)
 		drm_property_blob_put(dm_plane_state->lut3d);
@@ -1484,71 +1485,6 @@ static void dm_drm_plane_destroy_state(struct drm_plane *plane,
 }
 
 #ifdef CONFIG_DRM_AMD_COLOR_STEAMDECK
-/* copied from drm_atomic_uapi.c */
-static int atomic_replace_property_blob_from_id(struct drm_device *dev,
-					 struct drm_property_blob **blob,
-					 uint64_t blob_id,
-					 ssize_t expected_size,
-					 ssize_t expected_elem_size,
-					 bool *replaced)
-{
-	struct drm_property_blob *new_blob = NULL;
-
-	if (blob_id != 0) {
-		new_blob = drm_property_lookup_blob(dev, blob_id);
-		if (new_blob == NULL)
-			return -EINVAL;
-
-		if (expected_size > 0 &&
-		    new_blob->length != expected_size) {
-			drm_property_blob_put(new_blob);
-			return -EINVAL;
-		}
-		if (expected_elem_size > 0 &&
-		    new_blob->length % expected_elem_size != 0) {
-			drm_property_blob_put(new_blob);
-			return -EINVAL;
-		}
-	}
-
-	/* HDR MULT is always available */
-	drm_object_attach_property(&plane->base,
-				   dm->adev->mode_info.plane_hdr_mult_property,
-				   AMDGPU_HDR_MULT_DEFAULT);
-
-	if (dm->dc->caps.color.dpp.hw_3d_lut) {
-		drm_object_attach_property(&plane->base,
-					   dm->adev->mode_info.plane_shaper_lut_property, 0);
-		drm_object_attach_property(&plane->base,
-					   dm->adev->mode_info.plane_shaper_lut_size_property,
-					   MAX_COLOR_LUT_ENTRIES);
-		drm_object_attach_property(&plane->base,
-					   dm->adev->mode_info.plane_shaper_tf_property,
-					   DRM_TRANSFER_FUNCTION_DEFAULT);
-		drm_object_attach_property(&plane->base,
-					   dm->adev->mode_info.plane_lut3d_property, 0);
-		drm_object_attach_property(&plane->base,
-					   dm->adev->mode_info.plane_lut3d_size_property,
-					   MAX_COLOR_3DLUT_ENTRIES);
-	}
-
-	if (dm->dc->caps.color.dpp.ogam_ram) {
-		drm_object_attach_property(&plane->base,
-					   dm->adev->mode_info.plane_blend_lut_property, 0);
-		drm_object_attach_property(&plane->base,
-					   dm->adev->mode_info.plane_blend_lut_size_property,
-					   MAX_COLOR_LUT_ENTRIES);
-		drm_object_attach_property(&plane->base,
-					   dm->adev->mode_info.plane_blend_tf_property,
-					   DRM_TRANSFER_FUNCTION_DEFAULT);
-	}
-
-	*replaced |= drm_property_replace_blob(blob, new_blob);
-	drm_property_blob_put(new_blob);
-
-	return 0;
-}
-
 int dm_drm_plane_set_property(struct drm_plane *plane,
 			      struct drm_plane_state *state,
 			      struct drm_property *property,
@@ -1559,20 +1495,7 @@ int dm_drm_plane_set_property(struct drm_plane *plane,
 	int ret = 0;
 	bool replaced;
 
-	if (property == adev->dm.degamma_lut_property) {
-		ret = atomic_replace_property_blob_from_id(adev_to_drm(adev),
-				&dm_plane_state->degamma_lut,
-				val, -1, sizeof(struct drm_color_lut),
-				&replaced);
-	} else if (property == adev->dm.ctm_property) {
-		ret = atomic_replace_property_blob_from_id(adev_to_drm(adev),
-				&dm_plane_state->ctm,
-				val,
-				sizeof(struct drm_color_ctm), -1,
-				&replaced);
-	} else if (property == adev->dm.sdr_boost_property) {
-		dm_plane_state->sdr_boost = val;
-	} else if (property == adev->mode_info.plane_degamma_lut_property) {
+	if (property == adev->mode_info.plane_degamma_lut_property) {
 		ret = drm_property_replace_blob_from_id(plane->dev,
 							&dm_plane_state->degamma_lut,
 							val,
@@ -1643,14 +1566,7 @@ int dm_drm_plane_get_property(struct drm_plane *plane,
 	struct dm_plane_state *dm_plane_state = to_dm_plane_state(state);
 	struct amdgpu_device *adev = drm_to_adev(plane->dev);
 
-	if (property == adev->dm.degamma_lut_property) {
-		*val = (dm_plane_state->degamma_lut) ?
-			dm_plane_state->degamma_lut->base.id : 0;
-	} else if (property == adev->dm.ctm_property) {
-		*val = (dm_plane_state->ctm) ? dm_plane_state->ctm->base.id : 0;
-	} else if (property == adev->dm.sdr_boost_property) {
-		*val = dm_plane_state->sdr_boost;
-	} else if (property == adev->mode_info.plane_degamma_tf_property) {
+	if (property == adev->mode_info.plane_degamma_tf_property) {
 		*val = dm_plane_state->degamma_tf;
 	} else if (property == adev->mode_info.plane_hdr_mult_property) {
 		*val = dm_plane_state->hdr_mult;
-- 
2.41.0

